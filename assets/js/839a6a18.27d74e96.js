"use strict";(self.webpackChunkclient=self.webpackChunkclient||[]).push([[46],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>f});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=c(n),h=r,f=p["".concat(l,".").concat(h)]||p[h]||u[h]||i;return n?a.createElement(f,o(o({ref:t},d),{},{components:n})):a.createElement(f,o({ref:t},d))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:r,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},3371:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const i={id:"faq-4",sidebar_position:4,slug:"/Technical-questions"},o="Technical Questions",s={unversionedId:"FAQ/faq-4",id:"FAQ/faq-4",title:"Technical Questions",description:"Where can I find the price data in the datum?",source:"@site/docs/FAQ/faq-4.md",sourceDirName:"FAQ",slug:"/Technical-questions",permalink:"/Technical-questions",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{id:"faq-4",sidebar_position:4,slug:"/Technical-questions"},sidebar:"tutorialSidebar",previous:{title:"The $FACT Launch",permalink:"/The-$FACT-launch"}},l={},c=[{value:"Where can I find the price data in the datum?",id:"where-can-i-find-the-price-data-in-the-datum",level:2},{value:"Phase 1 is federated, what does that mean?",id:"phase-1-is-federated-what-does-that-mean",level:2}],d={toc:c},p="wrapper";function u(e){let{components:t,...i}=e;return(0,r.kt)(p,(0,a.Z)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"technical-questions"},"Technical Questions"),(0,r.kt)("h2",{id:"where-can-i-find-the-price-data-in-the-datum"},"Where can I find the price data in the datum?"),(0,r.kt)("p",null,"In this demo we will use an off-chain datum. Our example will use this\n",(0,r.kt)("a",{parentName:"p",href:"https://preprod.cexplorer.io/datum/9ced750ebbb2c9a9eac2e07a91525cadd3bfab23950089faa3e3a55517d1033f"},"datum"),"\n, within which the price data can be found in the following portion:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:'language-"list":',metastring:"[","[":!0},'                            {\n                                "fields": [\n                                    {\n                                        "int": 2540017902\n                                    },\n                                    {\n                                        "int": 1.8446744073709552e+19\n                                    }\n                                ],\n                                "constructor": 3\n                            },\n                            {\n                                "fields": [\n                                    {\n                                        "int": 39369801260558197\n                                    },\n                                    {\n                                        "int": 1.8446744073709552e+19\n                                    }\n                                ],\n                                "constructor": 3\n                            }\n                        ]\n')),(0,r.kt)("p",null,"The first ",(0,r.kt)("inlineCode",{parentName:"p"},"\u201cfields\u201d")," (we\u2019ll call it f1) conveys ADA-USD, the second (f2)\nconveys USD-ADA. Within each of these, the first part (we'll call it p1)\nrepresents a price pair."),(0,r.kt)("p",null,"With this in mind, f1, p1 gives the ADA-USD price as an integer (2540017902),\nand the second part (f1, p2) gives the number of decimals as ",(0,r.kt)("inlineCode",{parentName:"p"},"longint"),"\n(1.8446744073709552e+19)."),(0,r.kt)("p",null,"The same is true for f2, p1 which gives the price pair for USD-ADA as an\ninteger; with f2, p2 giving the number of decimals."),(0,r.kt)("p",null,"Using Python, you can find out the price by executing the following:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-from",metastring:"ctypes import c_longlong",ctypes:!0,import:!0,c_longlong:!0},"price = p1 * pow(10, c_longlong(p2).value)\n")),(0,r.kt)("p",null,"With the following results:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Off-chain Datum",src:n(4783).Z,width:"378",height:"123"})),(0,r.kt)("h2",{id:"phase-1-is-federated-what-does-that-mean"},"Phase 1 is federated, what does that mean?"),(0,r.kt)("p",null,"Phase 1 is only the first step in realizing Orcfax's decentralization vision,\nwhile enabling the team to continue developing important components and gaining\ninvaluable knowledge for future phases. These incremental development thresholds\nhelp to move Orcfax data up the \u201ctrustless\u201d spectrum, even in this initial\nfederated phase."),(0,r.kt)("p",null,"While our team\u2019s goal for Orcfax is for it to become fully decentralized, phase\n1 will use our federated node network so that we can continue critical R&D for\nour incentivized test net, and after that our decentralized model. Our team uses\nthe term \u201cfederated\u201d because Orcfax uses 5 geographically dispersed collector\nnodes; this model incorporates decentralized best practices such as the node\u2019s\ngeographical distribution in order to aid in regional consistency and the\nprevention of single sources of failure. Additionally, each of these federated\nnodes queries 3 different primary-source data providers at the same time, which\ngives Orcfax a decentralized data collection mechanism, and all of this is\nauditable in our world class standards compliant archival packages and Explorer\napp."),(0,r.kt)("p",null,"Our most recent development ",(0,r.kt)("a",{parentName:"p",href:"http://docs.orcfax.io/roadmap"},"roadmap")," update has\nOrcfax running the Incentivized Testnet Dec23-May24 and then transitioning to\nindependent validator nodes publishing to Mainnet in June 2024."))}u.isMDXComponent=!0},4783:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/2023-10-03--off-chain-datum-walkthrough-9ff0fd4273ec97d9311e19019888f716.png"}}]);